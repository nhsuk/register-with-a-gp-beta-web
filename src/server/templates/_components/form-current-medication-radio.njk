{##
 # Family: Control
 #
 # @param {string}       [variant]  Type of choice (radio|checkbox)
 # @param {string}       [label]    Label for the form elements
 # @param {string}       [name]     Name for the form group
 # @param {array}        [children] List of options to display
 #
 # @param {string}       [hint]     Hint text for the field (optional)
 # @param {bool}         [inline]   Whether to display the choices inline (optional)
 # @param {string|array} [value]    The current value. Used to determine whether to precheck a field (optional)
 # @param {string}       [error]    Whether to display an error on the field (optional)
 # @param {bool}         [optional] Whether the field is optional or not (optional)
 #
 # @return {string} HTML for multiple choice options
 #
 # @example
 #   {% component 'form-multiple-choice', {
 #     type:  'radio',
 #     label: 'Which option is your favourite?',
 #     name:  'favourites',
 #     children: [{
 #       label: 'Option 1',
 #       value: '1'
 #     }, {
 #       label: 'Option 2',
 #       value: '2'
 #     }]
 #   } %}
 #}
{% set hintId = 'hint-' + name %}

<fieldset id="input-{{ name }}">
  {% if label or hint or error %}
    <legend class="form-label" id="group-{{ name }}">
      {{ label }} {% if optional %}(optional){% endif %}
      {% if hint %}
        <span class="form-label__hint" id="{{ hintId }}">{{ hint }}</span>
      {% endif %}
    </legend>
  {% endif %}

  <div class="multiple-choice__container">
    {% for option in children %}
      {% set inputValue = option.value if 'value' in option else option.label %}
      {% set inputId = ['input', name, loop.index] | join('--') %}

      {% if variant == 'checkbox' %}
        {% set isSelected = (value and (inputValue in value)) %}
      {% else %}
        {% set isSelected = (inputValue | string == value | default('') | string) %}
      {% endif %}

      <label
        for="{{ inputId }}"
        class="multiple-choice multiple-choice--{{ variant | default('radio') }}{{ ' multiple-choice--inline' if inline }}{{ ' has-error' if error }} multiple-choice-radio-horizontal nested-radio-button"
        data-label="{{ option.label }}" data-show-nested-fields="{{ option.show_nested_fields }}"
      >
        {{ option.label }}
        <input
          type="{{ variant | default('radio') }}"
          name="{{ name }}"
          id="{{ inputId }}"
          value="{{ inputValue }}"
          class="multiple-choice__input"
          {% if isSelected %}
            checked="checked"
          {% endif %}
          {% if hint %}
            aria-describedby="{{ hintId }}"
          {% endif %}
        >
      </label>
    {% endfor %}
    </div>
    {% if field.nestedFields %}
      {% set showNestedField = (value in field.nestedFieldVisibleValue) %}

      <div id="current-medication-nested-container" class="nested-fields-container"  style="{{ 'display:none' if not showNestedField }}">

      {% set firstNestedField = field.nestedFields[0] %}

      <label for="input-{{ firstNestedField.key }}" class="form-label nested-inline-label">
        {% if stepData[firstNestedField.key] %}
            {% for d in stepData[firstNestedField.key] %}
              {{ f.label if loop.first }}
              {% set nestedFieldError = stepErrors[firstNestedField.key+'.'+loop.index0].message | replace(stepErrors[firstNestedField.key+'.'+loop.index0].label, "") %}
              <input type="text" name="{{ firstNestedField.key }}" id="input-{{ firstNestedField.key }}-{{ loop.index0 }}"
              class="form-textbox  nested-input {{ ' has-error' if nestedFieldError }} {{ ' nested-inline-base-input' if loop.first }}"
              value="{{ d }}">
            {% endfor %}
        {% else %}
              {% for f in field.nestedFields %}
                {{ f.label if loop.first }}
                {% set nestedFieldError = stepErrors[f.key+'.'+i].message | replace(stepErrors[f.key+'.'+loop.index].label, "") %}
                <input type="text" name="{{ f.key }}" id="input-{{ f.key }}-{{ loop.index0 }}"
                class="form-textbox nested-input {{ ' has-error' if nestedFieldError }} {{ ' nested-inline-base-input' if loop.first }}"
                value="{{ stepData[f.key][loop.index] | default('') }}">
              {% endfor %}
        {% endif %}
      </label>

      <p class="add-element-link"><a href="#" class="add-row">{{ field.addRowLabel }}</a></p>
      </div>
    {% endif %}
  
</fieldset>
